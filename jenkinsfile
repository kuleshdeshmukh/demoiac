pipeline {
    agent any
    
    environment {
        ALICLOUD_ACCESS_KEY     = credentials('ALICLOUD_ACCESS_KEY')
        ALICLOUD_SECRET_KEY = credentials('ALICLOUD_SECRET_KEY')
    }
    
    tools {
    terraform 'terraform'
    }
    
    
    

    stages {
      
       stage('Git Checkout') {
            steps {
               git branch: 'main', url: 'https://github.com/kuleshdeshmukh/demoiac'
            }
        }
        
        
        stage('Terraform init') {
            steps {
              sh """
                        echo "Initializing the workspace"
                        sh 'terraform workspace select ${environment} || terraform workspace new ${environment}'
                        terraform init
                        """
              
            }
        }
        
        
        stage('Terraform plan') {
      
            when {
                not {
                    equals expected: true, actual: params.destroy
                }
            }
            
            steps {
              sh """
                        echo "Generating the plan"
                        terraform plan -var "region=$region" -var "zone_id=$zone_id" -var "vpc_name=$vpc_name" -var "subnet=$subnet" -var "image_id=$image_id" -var "vmname=$vmname" -var "vmsize=$vmsize" -var "keyname=$keyname" -var "access_key=${access_key}" -var "secret_key=${secret_key}"
                        """
            }
        }
        
            stage('Terraform apply') {
            
             when {
                not {
                    equals expected: true, actual: params.destroy
                }
            }
              
            steps {
                
                        sh """
                        echo "Applying the plan"
                        terraform apply -auto-approve -var "region=$region" -var "zone_id=$zone_id" -var "vpc_name=$vpc_name" -var "subnet=$subnet" -var "image_id=$image_id" -var "vmname=$vmname" -var "vmsize=$vmsize" -var "keyname=$keyname" -var "access_key=$access_key" -var "secret_key=$secret_key"
                        """
                                }
                }
                
            stage('Terraform destroy') {
            
            when {
                equals expected: true, actual: params.destroy
            }            
            
            steps {
            
                        sh """
                        echo "Destroying the plan"
                        terraform destroy -auto-approve -var "region=$region" -var "zone_id=$zone_id" -var "vpc_name=$vpc_name" -var "subnet=$subnet" -var "image_id=$image_id" -var "vmname=$vmname" -var "vmsize=$vmsize" -var "keyname=$keyname" -var "access_key=$access_key" -var "secret_key=$secret_key"
                        """
              
            }
        }
                
        }
    }
